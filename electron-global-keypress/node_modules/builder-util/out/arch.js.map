{"version":3,"sources":["../src/arch.ts"],"names":[],"mappings":"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","sourcesContent":["export enum Arch {\n  ia32, x64, armv7l, arm64, universal\n}\n\nexport type ArchType = \"x64\" | \"ia32\" | \"armv7l\" | \"arm64\" | \"universal\"\n\nexport function toLinuxArchString(arch: Arch, targetName: string): string {\n  switch (arch) {\n    case Arch.x64:\n      return \"amd64\"\n    case Arch.ia32:\n      return targetName === \"pacman\" ? \"i686\" : \"i386\"\n    case Arch.armv7l:\n      return targetName === \"snap\" || targetName === \"deb\" ? \"armhf\" : \"armv7l\"\n    case Arch.arm64:\n      return targetName === \"pacman\" ? \"aarch64\" : \"arm64\"\n\n    default:\n      throw new Error(`Unsupported arch ${arch}`)\n  }\n}\n\nexport function getArchCliNames(): Array<string> {\n  return [Arch[Arch.ia32], Arch[Arch.x64], Arch[Arch.armv7l], Arch[Arch.arm64]]\n}\n\nexport function getArchSuffix(arch: Arch, defaultArch?: string): string {\n  return arch === defaultArchFromString(defaultArch) ? \"\" : `-${Arch[arch]}`\n}\n\nexport function archFromString(name: string): Arch {\n  switch (name) {\n    case \"x64\":\n      return Arch.x64\n    case \"ia32\":\n      return Arch.ia32\n    case \"arm64\":\n      return Arch.arm64\n    case \"armv7l\":\n      return Arch.armv7l\n    case \"universal\":\n      return Arch.universal\n    default:\n      throw new Error(`Unsupported arch ${name}`)\n  }\n}\n\nexport function defaultArchFromString(name?: string): Arch {\n  return name ? archFromString(name) : Arch.x64;\n}\n\nexport function getArtifactArchName(arch: Arch, ext: string): string {\n  let archName = Arch[arch]\n  const isAppImage = ext === \"AppImage\" || ext === \"appimage\"\n  if (arch === Arch.x64) {\n    if (isAppImage || ext === \"rpm\") {\n      archName = \"x86_64\"\n    }\n    else if (ext === \"deb\" || ext === \"snap\") {\n      archName = \"amd64\"\n    }\n  }\n  else if (arch === Arch.ia32) {\n    if (ext === \"deb\" || isAppImage || ext === \"snap\") {\n      archName = \"i386\"\n    }\n    else if (ext === \"pacman\" || ext === \"rpm\") {\n      archName = \"i686\"\n    }\n  }\n  else if (arch === Arch.armv7l) {\n    if (ext === \"snap\") {\n      archName = \"armhf\"\n    }\n  }\n  else if (arch === Arch.arm64) {\n    if (ext === \"pacman\" || ext === \"rpm\") {\n      archName = \"aarch64\"\n    }\n  }\n  return archName\n}"],"sourceRoot":""}
